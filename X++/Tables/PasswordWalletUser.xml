<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>PasswordWalletUser</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class PasswordWalletUser extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>create</Name>
				<Source><![CDATA[
    public static PasswordWalletUser create(
        WalletUserLogin     _login,
        Sha512Hash          _passwordHash,
        CryptoPasswordSalt  _salt,
        PasswordType        _passwordType)
    {
        PasswordWalletUser    walletUser;

        walletUser.WalletUserId = PasswordWalletUser::nextUserId();
        walletUser.Login        = _login;
        walletUser.PasswordHash = _passwordHash;
        walletUser.Salt         = _salt;
        walletUser.PasswordType = _passwordType;

        walletUser.insert();

        return walletUser;
    }

]]></Source>
			</Method>
			<Method>
				<Name>nextUserId</Name>
				<Source><![CDATA[
    public static WalletUserId nextUserId()
    {
        return PasswordWalletUser::lastUserId() + 1;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lastUserId</Name>
				<Source><![CDATA[
    public static WalletUserId lastUserId()
    {
        PasswordWalletUser walletUser;

        select maxOf(WalletUserId) from walletUser;

        return walletUser.WalletUserId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        PasswordWalletSysUser walletSysUser;
        
        ttsbegin;

        super();

        walletSysUser.SysUserId    = curUserId();
        walletSysUser.WalletUserId = this.WalletUserId;

        walletSysUser.insert();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static PasswordWalletUser find(
        WalletUserLogin _login,
        boolean         _forUpdate = false)
    {
        PasswordWalletUser walletUser;

        if (_login)
        {
            walletUser.selectForUpdate(_forUpdate);

            select firstOnly walletUser
                where walletUser.Login == _login;
        }

        return walletUser;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findId</Name>
				<Source><![CDATA[
    public static PasswordWalletUser findId(
        WalletUserId _userId,
        boolean      _forUpdate = false)
    {
        PasswordWalletUser walletUser;

        if (_userId)
        {
            walletUser.selectForUpdate(_forUpdate);

            select firstOnly walletUser
                where walletUser.WalletUserId == _userId;
        }

        return walletUser;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist(WalletUserLogin _login)
    {
        if (!_login)
        {
            return false;
        }

        return (
            select firstonly RecId from PasswordWalletUser 
                where PasswordWalletUser.Login == _login).RecId != 0;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>WalletUserId</Name>
			<ExtendedDataType>WalletUserId</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>UserId</Name>
			<ExtendedDataType>SysUserId</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Login</Name>
			<ExtendedDataType>WalletUserLogin</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PasswordHash</Name>
			<ExtendedDataType>Sha512Hash</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Salt</Name>
			<ExtendedDataType>CryptoPasswordSalt</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>PasswordType</Name>
			<EnumType>PasswordType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsSignedIn</Name>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>WalletUserIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>WalletUserId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LoginIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>Login</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>